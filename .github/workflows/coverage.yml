name: CICD
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
permissions:
  contents: write
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "3.14"]
    steps:
      - name: Clone
        uses: actions/checkout@v5
      - name: Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build
        run: pip install --verbose .[dev] numpy
      - name: Test
        run: pytest --cov=msglc tests/
      - name: Upload
        uses: codecov/codecov-action@v5
        if: matrix.python-version == '3.10'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: TLCFEM/msglc
          plugins: pycoverage
  # benchmark:
  #   name: Benchmark
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 100
  #   steps:
  #     - name: Clone
  #       uses: actions/checkout@v5
  #     - name: Python
  #       uses: actions/setup-python@v6
  #       with:
  #         python-version: 3.11
  #     - name: Build
  #       run: pip install .[dev,msgspec,numpy] matplotlib h5py
  #     - name: Test
  #       run: |
  #         python3 h5/generate.py
  #         python3 h5/read.py
  #         tar czf benchmark.tar.gz ./h5/*.pdf
  #     - name: Upload
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: msglc-benchmark
  #         path: benchmark.tar.gz
  wheels:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    needs:
      - test
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Build
        run: pipx run build --sdist
      - name: Check
        run: pipx run twine check dist/*
      - uses: pypa/gh-action-pypi-publish@release/v1
        if: contains(github.event.head_commit.message, '[publish]')
      - uses: actions/upload-artifact@v4
        with:
          name: msglc-sdist
          path: dist/*.tar.gz
  documentation:
    name: Documentation
    needs: wheels
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Delete
        uses: strumwolf/delete-deployment-environment@v3
        with:
          token: ${{ secrets.ALL }}
          environment: github-pages
      - name: Clone
        uses: actions/checkout@v5
      - name: Setup
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Deploy
        run: |
          pip install -e .[dev,numpy,msgspec]
          mkdocs build
          git fetch origin
          git config --global user.name "Theodore Chang"
          git config --global user.email "tlcfem@gmail.com"
          git pull
          mkdocs gh-deploy
